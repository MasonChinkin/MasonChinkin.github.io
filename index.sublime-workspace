{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"fonts",
				"font-size\tproperty"
			],
			[
				"deficit",
				"deficitLabel"
			],
			[
				"defici",
				"deficitPercent"
			],
			[
				"this",
				"thisYearDeficit"
			],
			[
				"def",
				"deficitVal"
			],
			[
				"thisY",
				"thisYearDeficit"
			],
			[
				"selectAll",
				"svg.selectAll(\".nodePercent"
			],
			[
				"cvs",
				"csv_row"
			],
			[
				"tick",
				"tickFormat\t(index.html)"
			],
			[
				"us",
				"us-budget-sankey.js\t(us-budget-sankey.html)"
			],
			[
				"f",
				"f\tAnonymous Function"
			],
			[
				"img",
				"imgWidth"
			],
			[
				"di",
				"div\tTag"
			],
			[
				"tex",
				"text-align\tproperty"
			],
			[
				"font",
				"font-size\t(congress-2016-map.html)"
			],
			[
				"thisR",
				"thisResultsIndex"
			],
			[
				"tooltip",
				"tooltipDiv"
			],
			[
				"thisCon",
				"thisConnects"
			],
			[
				"select",
				"selectAll"
			],
			[
				"node",
				"nodeMouseOver"
			],
			[
				"filter",
				"filter()\td3-selection.filter()"
			],
			[
				"image",
				"imageSize"
			],
			[
				"imag",
				"imageSize"
			],
			[
				"data",
				"dataset"
			],
			[
				"transitionS",
				"transitionStack"
			],
			[
				"get",
				"getWidth"
			],
			[
				"gdp",
				"gdpLineDataset"
			],
			[
				"draw",
				"drawGdpLine"
			],
			[
				"bar",
				"barOnClick"
			],
			[
				"legen",
				"legendVals"
			],
			[
				"dis",
				"display\tproperty"
			],
			[
				"console",
				"console.log"
			],
			[
				"key",
				"key_index"
			],
			[
				"padd",
				"padding-left"
			],
			[
				"band",
				"bandwidth()\td3-scale.bandwidth()"
			],
			[
				"outer",
				"paddingOuter()\td3-scaleBand.paddingOuter()"
			],
			[
				"pointer",
				"pointer-events"
			],
			[
				"text",
				"text()\td3.text()"
			],
			[
				"y",
				"yTop"
			],
			[
				"nest",
				"nestDataset"
			],
			[
				"net",
				"nestDataset"
			],
			[
				"pares",
				"parseInt"
			],
			[
				"growth",
				"growth_type"
			],
			[
				"gr",
				"growth_annual_perc"
			],
			[
				"handle",
				"handleId"
			],
			[
				"svg",
				"svgElement"
			],
			[
				"hand",
				"handleCy"
			],
			[
				"easeel",
				"easeElasticOut\td3.easeElasticOut"
			],
			[
				"bubble",
				"bubbleMouseMove"
			],
			[
				"scheme",
				"schemeCategory20\td3.schemeCategory20"
			],
			[
				"al",
				"align\t(geomapping.html)"
			],
			[
				"margin",
				"margin-bottom"
			],
			[
				"style",
				"style()\td3-selection.style()"
			],
			[
				"zoomIdentity",
				"zoomIdentity\td3.zoomIdentity"
			],
			[
				"elas",
				"easeElasticInOut\td3.easeElasticInOut"
			],
			[
				"create",
				"createPanButtons"
			],
			[
				"trans",
				"transpose()\td3.transpose()"
			],
			[
				"tickf",
				"tickFormat()\td3-axis.tickFormat()"
			],
			[
				"axisb",
				"axisBottom()\td3.axisBottom()"
			],
			[
				"timef",
				"timeFormat()\td3.timeFormat()"
			],
			[
				"datum",
				"datum()\td3-selection.datum()"
			],
			[
				"app",
				"append()\td3-selection.append()"
			],
			[
				"sele",
				"select()\td3.select()"
			],
			[
				"x",
				"x()\td3-line.x()"
			],
			[
				"scaleLin",
				"scaleLinear()\td3.scaleLinear()"
			],
			[
				"range",
				"range()\td3-scale.range()"
			],
			[
				"dom",
				"domain()\td3-scale.domain()"
			],
			[
				"scaleti",
				"scaleTime()\td3.scaleTime()"
			],
			[
				"function",
				"functions\t(01_line_chart.html)"
			],
			[
				"scalet",
				"scaleThreshold()\td3.scaleThreshold()"
			],
			[
				"csv",
				"csv()\td3.csv()-snippet"
			],
			[
				"att",
				"attr()\td3-transition.attr()"
			],
			[
				"at",
				"attr()\td3-transition.attr()"
			],
			[
				"random",
				"randomizeScatter"
			],
			[
				"point",
				"pointer-events"
			],
			[
				"bars",
				"bars-add-sub.js"
			],
			[
				"max",
				"max-height"
			],
			[
				"attr",
				"attr()\td3-selection.merge()"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "// set the dimensions and margins of the graph\nvar margin = { top: 40, right: 10, bottom: 100, left: 10 },\n    width = container.offsetWidth - margin.left - margin.right,\n    height = 600 - margin.top - margin.bottom;\n\nvar fontScale = d3.scaleLinear()\n    .range([14, 22]);\n\n// format variables\nvar formatNumber = d3.format(\".1f\"), // zero decimal places\n    format = function(d) { return formatNumber(d); },\n    color = d3.scaleOrdinal(d3.schemeCategory20);\n\n// append the svg object to the body of the page\nvar sankeySvg = d3.select(\"#container\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .style('background', '#e8e8e8')\n    .append(\"g\")\n    .attr(\"transform\",\n        \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n//transition time\ntransition = 1000\n\n//starting year\nthisYear = 1968\n\n// Set the sankey diagram properties\nvar sankey = d3.sankey()\n    .nodeWidth(60)\n    .nodePadding(20)\n    .size([width, height]);\n\nvar path = sankey.link();\n\n// load the data\nd3.csv(\"viz-data/us-budget-sankey-main.csv\", function(error, csv) {\n    if (error) throw error;\n\n    // load deficit data\n    d3.csv(\"viz-data/us-budget-sankey-deficit.csv\", function(error, deficit) {\n        if (error) throw error;\n\n        newData(csv, deficit, thisYear);\n        drawSankey()\n        drawDeficit()\n        drawNotes()\n        drawSlider()\n        drawLines();\n    });\n});\n\nfunction newData(csv, deficit, thisYear) {\n    thisYearCsv = csv.filter(function(d) {\n        if (d['year'] == thisYear) {\n            return d\n        }\n    });\n    //console.log(thisYearCsv)\n\n    thisYearDeficit = deficit.filter(function(d) {\n        if (d['year'] == thisYear) {\n            return d\n        }\n    });\n    //console.log(thisYearDeficit)\n\n    //create an array to push all sources and targets, before making them unique\n    //because starting nodes are not targets and end nodes are not sources\n    arr = [];\n    thisYearCsv.forEach(function(d) {\n        arr.push(d.source);\n        arr.push(d.target);\n    }); //console.log(arr.filter(onlyUnique))\n\n    // create nodes array\n    nodes = arr.filter(onlyUnique).map(function(d, i) {\n        return {\n            node: i,\n            name: d\n        }\n    });\n\n    //console.log(nodes)\n    // create links array\n    links = thisYearCsv.map(function(thisYearCsv_row) {\n        return {\n            source: getNode(\"source\"),\n            target: getNode(\"target\"),\n            value: +thisYearCsv_row.value\n        }\n\n        function getNode(type) {\n            return nodes.filter(function(node_object) { return node_object.name == thisYearCsv_row[type]; })[0].node;\n        }\n    });\n    //console.log(links)\n\n    // format line data\n    var timeParse = d3.timeParse(\"%Y\")\n\n    lineData = csv\n    lineData.forEach(function(d) {\n        d.year = timeParse(d.year);\n        d.value = +d.value;\n    });\n    //console.log(lineData)\n};\n\nfunction drawSankey() {\n    d3.selectAll(\".node\").remove();\n    d3.selectAll(\".link\").remove();\n    d3.selectAll(\".deficitLabel\").remove();\n\n    sankey.nodes(nodes)\n        .links(links)\n        .layout(1000);\n\n    fontScale.domain(d3.extent(nodes, function(d) { return d.value }));\n\n    // add in the links\n    link = sankeySvg.append(\"g\").selectAll(\".link\")\n        .data(links, function(d) { return d.id; })\n        .enter().append(\"path\")\n        .attr(\"class\", \"link\")\n        .attr(\"d\", path)\n        .style(\"stroke\", function(d) {\n            return color(d.source.name.replace(/ .*/, \"\"));\n        })\n        .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); });\n\n    // add in the nodes\n    var node = sankeySvg.append(\"g\").selectAll(\".node\")\n        .data(nodes)\n        .enter().append(\"g\")\n        .attr(\"class\", \"node\")\n        .attr(\"transform\", function(d) {\n            return \"translate(\" + d.x + \",\" + d.y + \")\"\n        });\n\n    // add the rectangles for the nodes\n    node.append(\"rect\")\n        .attr(\"height\", function(d) {\n            return d.dy < 0 ? .1 : d.dy;\n        })\n        .attr(\"width\", sankey.nodeWidth())\n        .attr('class', function(d) {\n            return d.name;\n        })\n        .attr('value', function(d) {\n            return d.value;\n        })\n        .style(\"fill\", 'lightgrey')\n        .style(\"opacity\", 0.4)\n        .style(\"stroke\", function(d) {\n            return d3.rgb(d.color).darker(2);\n        });\n\n    // title for the nodes\n    node.append(\"text\")\n        .attr(\"x\", -6)\n        .attr(\"y\", function(d) { return d.dy / 2; })\n        .attr(\"dy\", \".35em\")\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"transform\", null)\n        .style(\"font-size\", function(d) {\n            return Math.floor(fontScale(d.value)) + \"px\";\n        })\n        .text(function(d) { return d.name; })\n        .filter(function(d) { return d.x < width / 2; })\n        .attr(\"x\", 6 + sankey.nodeWidth())\n        .attr(\"text-anchor\", \"start\")\n        .attr('class', 'nodeLabel');\n\n    // % for the nodes\n    node.append(\"text\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"x\", 30)\n        .attr(\"y\", function(d) { return d.dy / 2; })\n        .style(\"font-size\", 18)\n        .attr(\"dy\", \".35em\")\n        .filter(function(d) { return d.value > 1 })\n        .filter(function(d) { return d.node != 20 }) //do spending seperately to correctly show surplus\n        .text(function(d) { return format(d.value) + \"%\" })\n        .attr('class', 'nodePercent');\n\n    // % for spending in times of surplus using seperate data\n    node.append(\"text\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"x\", 30)\n        .attr(\"y\", function(d) { return d.dy / 2; })\n        .style(\"font-size\", 18)\n        .attr(\"dy\", \".35em\")\n        .filter(function(d) { return d.node == 20 })\n        .text(function() {\n            return format(thisYearDeficit[0].spending) + \"%\"\n        })\n        .attr('class', 'nodePercent');\n};\n\nfunction drawDeficit() {\n\n    //highlight deficit\n    barHeight = d3.select('.Spending').attr('height');\n    barVal = d3.select('.Spending').attr('value');\n    deficitVal = thisYearDeficit[0].deficit\n\n    //get deficit bar size with ratio of spending value to bar height\n    deficitBarRatio = (barHeight * (deficitVal)) / barVal;\n    //console.log(deficitBarRatio)\n\n    deficitBar = d3.select('.Spending')\n        .select(function() { return this.parentNode })\n        .append('rect')\n        .attr(\"height\", function() { if (deficitBarRatio < 0) { return -deficitBarRatio } else { return deficitBarRatio } })\n        .attr(\"width\", sankey.nodeWidth())\n        .attr(\"y\", function(d) { if (deficitBarRatio < 0) { return d.dy + deficitBarRatio; } else { return d.dy - deficitBarRatio } })\n        .style('fill', function() {\n            if (deficitBarRatio < 0) { return 'red' } else { return 'blue' }\n        })\n        .style('opacity', 0.8)\n        .attr('class', 'deficit');\n\n\n    function deficitType() { if (thisYearDeficit[0].deficit < 0) { return \"Deficit\" } else { return \"Surplus\" } };\n\n    sankeySvg.append('text')\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"x\", width / 2)\n        .attr(\"y\", height * .92)\n        .style(\"font-size\", 25)\n        .style(\"font-weight\", 'bold')\n        .attr('class', 'deficitLabel')\n        .text(function() {\n            if (thisYearDeficit[0].deficit < 0) { return format(-thisYearDeficit[0].deficit) + \"% \" + \"Deficit\" } else { return format(thisYearDeficit[0].deficit) + \"% \" + \"Surplus\" }\n        })\n        .style('fill', function() {\n            if (deficitBarRatio < 0) { return 'red' } else { return 'blue' }\n        });\n};\n\nfunction drawSlider() {\n    //Slider\n    var slider = d3.sliderHorizontal()\n        .min(1968)\n        .max(2017)\n        .step(1)\n        .width(container.offsetWidth - 75)\n        .tickFormat(d3.format(\".4\"))\n        .on('end', val => { //use end instead of onchange, is when user releases mouse\n            thisYear = val;\n\n            d3.csv(\"viz-data/us-budget-sankey-main.csv\", function(error, csv) {\n                if (error) throw error;\n\n                d3.csv(\"viz-data/us-budget-sankey-deficit.csv\", function(error, deficit) {\n                    if (error) throw error;\n                    newData(csv, deficit, thisYear);\n                    drawSankey()\n                    drawDeficit()\n                });\n            });\n        });\n\n    var g = d3.select(\"div#slider\").append(\"svg\")\n        .attr(\"width\", container.offsetWidth)\n        .attr(\"height\", 100)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(30,30)\");\n\n    g.call(slider);\n    d3.selectAll('#slider')\n        .style('font-size', 20)\n}\n\nfunction drawNotes() {\n\n    //PERCENT OF GDP\n    sankeySvg.append('text')\n        .attr(\"x\", 0)\n        .attr(\"y\", -15)\n        .attr(\"dy\", \"0em\")\n        .text('Percent of GDP (May not add up due to rounding)')\n        .attr('font-size', 25)\n        .attr('font-weight', 'bold')\n        .attr('class', 'percent');\n\n    //Source and * and ** notes\n    sankeySvg.append('text')\n        .attr(\"x\", width * 0.65)\n        .attr(\"y\", height + 50)\n        .attr(\"dy\", \"0em\")\n        .text('* Originally under \"Mandatory\" as a negative value')\n        .attr(\"class\", \"legend\")\n        .attr('font-size', 16);\n\n    sankeySvg.append('text')\n        .attr(\"x\", width * 0.65)\n        .attr(\"y\", height + 70)\n        .attr(\"dy\", \"0em\")\n        .text('** Technically called \"Programmatic\"')\n        .attr(\"class\", \"legend\")\n        .attr('font-size', 16);\n\n\n    sankeySvg.append('text')\n        .attr(\"x\", width * 0.65)\n        .attr(\"y\", height + 90)\n        .attr(\"dy\", \"0em\")\n        .text('Source: OMB')\n        .attr(\"class\", \"legend\")\n        .attr('font-size', 16);\n};\n\nfunction drawLines() {\n    //seperate datasets filtered by type\n    revLineData = lineData.filter(function(d) { return d.type == 'Revenue' });\n    spendLineData = lineData.filter(function(d) { return d.type == 'Spending' });\n    //console.log(revLineData)\n    //console.log(spendLineData)\n\n    //Dimensions\n    var lineMargin = { top: 5, right: 10, bottom: 5, left: 10, middle: 10 },\n        lineWidth = container.offsetWidth - lineMargin.left - lineMargin.right,\n        lineHeight = 300 - lineMargin.top - lineMargin.bottom;\n\n    var lineSvg = d3.select(\"#line-container\").append(\"svg\")\n        .attr(\"width\", lineWidth + lineMargin.left + lineMargin.right)\n        .attr(\"height\", lineHeight + lineMargin.top + lineMargin.bottom)\n        .style('background', '#e8e8e8')\n        .append(\"g\")\n        .attr(\"transform\",\n            \"translate(\" + lineMargin.left + \",\" + lineMargin.top + \")\");\n\n    // set the domain and range\n    var revLineX = d3.scaleTime()\n        .domain(d3.extent(lineData, function(d) { return d.year; }))\n        .range([lineMargin.left, lineWidth / 2 - lineMargin.middle]);\n\n    var spendLineX = d3.scaleTime()\n        .domain(d3.extent(lineData, function(d) { return d.year; }))\n        .range([lineWidth / 2 + lineMargin.middle, lineWidth - lineMargin.right]);\n\n    var lineY = d3.scaleLinear()\n        .domain([0, d3.max(revLineData, function(d) { return d.value; })])\n        .range([lineHeight - lineMargin.bottom, lineMargin.top]);\n\n    // define the line\n    var revLines = d3.line()\n        .x(function(d) { return revLineX(d.year); })\n        .y(function(d) { return lineY(d.value); });\n\n    var spendLines = d3.line()\n        .x(function(d) { return spendLineX(d.year); })\n        .y(function(d) { return lineY(d.value); });\n\n    // Add the lines\n    lineSvg.selectAll('line revLine')\n        .data([revLineData])\n        .enter().append(\"path\")\n        .attr('class', function(d) { return \"line revLine\" })\n        .attr(\"d\", revLines);\n\n    // Add the lines\n    lineSvg.selectAll('line spendLine')\n        .data([spendLineData])\n        .enter().append(\"path\")\n        .attr('class', function(d) { return \"line spendLine\" })\n        .attr(\"d\", spendLines);\n}\n\nfunction onlyUnique(value, index, self) {\n    return self.indexOf(value) === index;\n};\n\n//***UNUSED***\n//animated update is WIP, labels arent repositioning correctly, likely because nodes don't reorder when data does\nfunction updateSankey() {\n    sankey.nodes(nodes)\n        .links(links)\n        .layout(1000);\n\n    //sankey.relayout(); PURPOSE???\n    fontScale.domain(d3.extent(nodes, function(d) { return d.value }));\n\n    // add in the links\n    sankeySvg.selectAll(\".link\")\n        .data(links)\n        .transition()\n        .duration(transition)\n        .attr(\"d\", path)\n        .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); });\n\n    // add in the nodes\n    sankeySvg.selectAll(\".node\")\n        .data(nodes)\n        .transition()\n        .duration(transition)\n        .attr(\"transform\", function(d) {\n            return \"translate(\" + d.x + \",\" + d.y + \")\"\n        });\n\n    // add the rectangles for the nodes\n    sankeySvg.selectAll(\".node rect\")\n        .data(nodes)\n        .transition()\n        .duration(transition)\n        .attr(\"height\", function(d) {\n            return d.dy < 0 ? .1 : d.dy;\n        });\n\n    // title for the nodes\n    sankeySvg.selectAll(\".nodeLabel\")\n        .data(nodes)\n        .transition()\n        .duration(transition)\n        .style(\"font-size\", function(d) {\n            return Math.floor(fontScale(d.value)) + \"px\";\n        });\n\n    // % for the nodes\n    sankeySvg.selectAll(\".nodePercent\")\n        .data(nodes)\n        .text(function(d) { return format(d.value) + \"%\" });\n}",
			"file": "d3-visualizations/us-budget-sankey.js",
			"file_size": 13854,
			"file_write_time": 131771979592219043,
			"settings":
			{
				"buffer_size": 13427,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 200.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"package control ",
				"Package Control: Enable Package"
			],
			[
				"Package Control: dia",
				"Package Control: Disable Package"
			],
			[
				"package control: d",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: inst",
				"Package Control: Install Package"
			],
			[
				"Package Control: rem",
				"Package Control: Remove Package"
			],
			[
				"sublimel",
				"SublimeLinter: Choose Tooltip Theme"
			],
			[
				"color",
				"Color Picker"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"Snippet: ",
				"Snippet: Lorem ipsum"
			],
			[
				"prett",
				"HTMLPrettify: Set Plugin Options"
			],
			[
				"package control: in",
				"Package Control: Install Package"
			],
			[
				"package control: re",
				"Package Control: Remove Package"
			],
			[
				"package control: ",
				"Package Control: Remove Package"
			]
		],
		"width": 879.0
	},
	"console":
	{
		"height": 198.0,
		"history":
		[
			"Package Control: Install Package",
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"Package Control: Install Package",
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/assets",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/d3-visualizations",
		"/C/Users/Zhangkin/Desktop/D3",
		"/C/Users/Zhangkin/Desktop/D3/d3-book-2.0.1",
		"/C/Users/Zhangkin/Desktop/D3/d3-book-2.0.1/chapter_11",
		"/C/Users/Zhangkin/Desktop/D3/line",
		"/C/Users/Zhangkin/Desktop/D3/workspace",
		"/C/Users/Zhangkin/Desktop/D3/workspace/demo"
	],
	"file_history":
	[
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/us-budget-sankey.html",
		"/C/Users/Zhangkin/Desktop/D3/line/data.csv",
		"/C/Users/Zhangkin/Desktop/D3/line/index.html",
		"/C/Users/Zhangkin/Desktop/D3/workspace/demo/demo.js",
		"/C/Users/Zhangkin/Desktop/D3/workspace/demo/index.html",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/d3-visualizations/us-budget-sankey.js",
		"/F/Downloads/Book1.csv",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/index.html",
		"/F/Google Drive/STATA/Aggragated & Combined/IMPORTANT ONE- Cpn by Industry.do",
		"/F/Google Drive/STATA/Aggragated & Combined/Combine countries and mark duplicates.do",
		"/F/Google Drive/STATA/Aggragated & Combined/Final_aggragated.csv",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/assets/js/d3-simple-slider.min.js",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/assets/js/sankey.js",
		"/C/Users/Zhangkin/AppData/Local/Temp/Rar$DRa15620.21776/d3-simple-slider.js",
		"/C/Users/Zhangkin/Desktop/D3/workspace/slider/index.html",
		"/C/Users/Zhangkin/AppData/Local/Temp/Rar$DRa19548.5391/d3-simple-slider.js",
		"/C/Users/Zhangkin/AppData/Local/Temp/Rar$DRa19108.19245/d3-simple-slider.js",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/d3-visualizations/sankey-slider.js",
		"/C/Users/Zhangkin/AppData/Local/Temp/Rar$DRa376.46970/d3-simple-slider.min.js",
		"/C/Users/Zhangkin/AppData/Local/Temp/Rar$DRa376.46482/d3-simple-slider.min.js",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/assets/js/d3-simple-slider.js",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/assets/css/main.css",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/assets/js/d3-annotation.min.js",
		"/C/Users/Zhangkin/Desktop/D3/workspace/demo sankey/us-budget-sankey.js",
		"/C/Users/Zhangkin/Desktop/D3/workspace/demo sankey/index.html",
		"/C/Users/Zhangkin/Desktop/D3/workspace/demo sankey/data.csv",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/viz-data/us_budget_sankey.json",
		"/F/Downloads/json_exp.json",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/viz-data/state_budget_sankey",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/swiss-army-bar-chart.html",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/gdp.html",
		"/F/Downloads/csv2json.json",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/europe-trip.html",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/d3-visualizations/europe-trip.js",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/d3-visualizations/congress-2016-results.js",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/d3-visualizations/gdp.js",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/d3-visualizations/random-scatter.js",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/Random-scatter.html",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/d3-visualizations/swiss-army-bar-chart.js",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/d3-visualizations/stacked-area.js",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/d3-visualizations/pie.js",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/d3-visualizations/networks.js",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/congress-2016-map.html",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/line-area-charts.html",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/networks.html",
		"/C/Users/Zhangkin/AppData/Roaming/Sublime Text 3/Packages/HTML-CSS-JS Prettify/.jsbeautifyrc.defaults.json",
		"/C/Users/Zhangkin/AppData/Roaming/Sublime Text 3/Packages/HTML-CSS-JS Prettify/HTMLPrettify.sublime-settings",
		"/C/Users/Zhangkin/Saved Games/DCS/Config/options.lua",
		"/C/Program Files (x86)/Steam/steamapps/common/DCSWorld/Mods/aircraft/A-10C/Cockpit/Scripts/MFCD/indicator/MFCD_fonts.lua",
		"/C/Users/Zhangkin/Desktop/New AutoHotkey Script.ahk",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/geomapping.html",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/d3-visualizations/zoomable-us-map.js",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/viz-data/syriaNetwork.json",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/Layouts/example_force_layout.html",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/d3-visualizations/old-network.js",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/Layouts/miserables.json",
		"/F/Downloads/syriaNetwork.json",
		"/F/Downloads/network.json",
		"/F/Downloads/mygeodata/gmlexperiment.gml",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/Layouts/transitioning_stacked_bars.html",
		"/C/Users/Zhangkin/Desktop/D3/d3-book-2.0.1/chapter_16/10_refine_styling.html",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/Layouts/example_transition_stacked_Bar.html",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/Layouts/Stacked-bar.html",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/Projects/gdp_growth/old_attempts/gdp_growth_stacked_bar.html",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/Projects/gdp_growth/stacked-area.html",
		"/C/Users/Zhangkin/Desktop/D3/d3-book-2.0.1/chapter_16/01_initial_chart.html",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/Projects/gdp_growth/working-stacked-area.html",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/Layouts/stacked-area.html",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/viz-data/trip.csv",
		"/C/Users/Zhangkin/AppData/Roaming/Sublime Text 3/Packages/User/SideBarEnhancements/Open With/Side Bar.sublime-menu",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/Projects/europe_trip/europe-trip.html",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/Geomapping/us-states.json",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/Projects/europe_trip/world.json",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/Geomapping/us-cities.csv",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/Geomapping/Zooming.html",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/Layouts/Force.html",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/Projects/europe_trip/europe-trip.js",
		"/F/Downloads/ne_50m_admin_0_countries (1).json",
		"/F/Downloads/ne_50m_admin_0_countries.json",
		"/F/Downloads/map.geojson",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/viz-data/random-network.json",
		"/C/Users/Zhangkin/AppData/Roaming/Sublime Text 3/Packages/User/.jsbeautifyrc",
		"/F/Downloads/Forked from https___next.json-generator.com_VkbpYpuiV.json",
		"/F/Downloads/Forked from https___next.json-generator.com_VJdXV6doV.json",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/Misc.html",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/viz-data/us-ag-productivity.csv",
		"/C/Users/Zhangkin/Desktop/D3/d3-book-2.0.1/chapter_16/02_color_by_type.html",
		"/C/Users/Zhangkin/Desktop/D3/d3-book-2.0.1/chapter_16/04_types_only.html",
		"/C/Users/Zhangkin/AppData/Local/Temp/Rar$DRa9580.49170/index.html",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/bars-add-sub.js",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/bars-add-sub.html",
		"/C/Users/Zhangkin/Desktop/D3/d3-book-2.0.1/chapter_14/17_labels.html",
		"/C/Users/Zhangkin/Desktop/D3/d3-book-2.0.1/chapter_14/16_combo_zoom_pan.html",
		"/C/Users/Zhangkin/Desktop/D3/d3-book-2.0.1/chapter_14/14_zoom_with_buttons.html",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/Geomapping/dragging.html",
		"/C/Users/Zhangkin/Desktop/D3/d3-book-2.0.1/chapter_14/13_zoom_pan_buttons_fixed.html",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/Geomapping/09_pan_transition.html",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/Geomapping/10_pan_draggable.html",
		"/C/Users/Zhangkin/Desktop/D3/d3-book-2.0.1/chapter_14/10_pan_draggable.html",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/Geomapping/vers1.html",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/Geomapping/Pan-buttons.html",
		"/C/Users/Zhangkin/Desktop/D3/d3-book-2.0.1/chapter_14/08_pan.html",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/line_chart/line_chart.js",
		"/C/Users/Zhangkin/Desktop/D3/d3-book-2.0.1/chapter_11/06_area_chart.html",
		"/C/Users/Zhangkin/Desktop/D3/d3-book-2.0.1/chapter_11/05_line_chart_labeled.html",
		"/C/Users/Zhangkin/Desktop/D3/d3-book-2.0.1/chapter_11/04_line_chart_adjusted.html",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/line_chart/line_chart.html",
		"/C/Users/Zhangkin/Desktop/D3/d3-book-2.0.1/chapter_11/03_line_chart_missing.html",
		"/C/Users/Zhangkin/Desktop/D3/d3-book-2.0.1/chapter_11/02_line_chart_axes.html",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/bars-add-sub.html",
		"/C/Users/Zhangkin/Desktop/D3/d3-book-2.0.1/chapter_11/01_line_chart.html",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/New folder/01_line_chart.html",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/New folder/line_chart.js",
		"/C/Users/Zhangkin/Desktop/D3/d3-book-2.0.1/chapter_11/README.md",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/bars-add-sub.js",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/Assets/styles.css",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/random-bars.js",
		"/C/Users/Zhangkin/Desktop/D3/Template.html",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/old-projects/svg-text1.js",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/time-scale/time-scale.html",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/random-scatter.html",
		"/C/Users/Zhangkin/Desktop/D3/D3.js-book-work-plus/random-bars.html",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/random-scatter.js",
		"/C/Users/Zhangkin/Desktop/D3/stackedgraphforbusinesscard.html",
		"/C/Users/Zhangkin/AppData/Local/Temp/Rar$DRa26504.986/HIP readme.txt",
		"/C/Users/Zhangkin/Desktop/D3/stocks.csv",
		"/C/Users/Zhangkin/Desktop/D3/MasonChinkin.github.io/assets/css/bars-add-sub-styles.css",
		"/F/Downloads/Resume - Mason Chinkin.htm"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 156.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"-",
			"Apr",
			"12",
			"1-May-",
			"Apr",
			"12",
			"svg",
			"console",
			"getnode",
			"getnodes",
			"thisYearD",
			"percent",
			"font-s",
			"parameter",
			"parameter-value",
			"font",
			"background",
			"width",
			"sort",
			" )",
			"sort",
			"csv",
			"source",
			"parameter-value",
			"slice",
			"500",
			"relayout",
			"container",
			"//.",
			"d.x",
			"node",
			"csv",
			"data",
			"arguments",
			">\n",
			" 0,",
			"FIELD1",
			"state",
			"\"source\": 1",
			"\"source\": 0",
			"touch",
			"header",
			"275",
			"300",
			"header",
			"offset",
			"portfolio",
			"two",
			"container",
			"    \ncontainer",
			"    \n",
			"margin",
			"container",
			"main",
			"toggle",
			"1880",
			"13",
			"right",
			"align",
			"200",
			"300",
			"header",
			"f",
			"header",
			"side",
			"sidebar",
			"resume",
			"save",
			"resume",
			"portfolio",
			"legend",
			"zoom",
			"attr",
			"get",
			"mousem",
			"mouso",
			"Islamic_Front",
			"Assad_",
			"Free_Syria_Army",
			"Saudi_",
			"Al_Qaeda",
			"center",
			"text",
			"start",
			"viz-data/",
			"force",
			"force.",
			"link",
			"edge",
			"\"Assad Government\"",
			"\"Islamic Front\"",
			"\"Saudi Arabia\"",
			"\"Free Syria Army\"",
			"\"Al Qaeda\"",
			"\"line\"",
			"\"type\"",
			"\"target\"",
			"\"source\"",
			"\"image\"",
			"\"id\"",
			"name",
			"qae",
			"line",
			" series",
			"series",
			"thisStack",
			"gdpD",
			"viewstat",
			"#bars",
			"thisSer",
			"thisS",
			"keys",
			"thisSeries",
			"window",
			"dataset",
			"key",
			"button",
			"toggle",
			"hidden",
			"key",
			"x_var",
			"class",
			"%",
			"tooltip",
			"line",
			"vehicles",
			"catDataset",
			"dataset"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"data",
			"name",
			"300",
			"Islamic Front",
			"Assad ",
			"Free Syria Army",
			"Saudi ",
			"Al Qaeda",
			"viz-data/networkImages/",
			"\"Assad_Government\"",
			"\"Islamic_Front\"",
			"\"Saudi_Arabia\"",
			"\"Free_Syria_Army\"",
			"\"Al_Qaeda\"",
			"Al_Qaeda",
			"line",
			"type",
			"target",
			"source",
			"image",
			"id",
			"data",
			"125",
			"300",
			"400",
			"200",
			"500",
			"typeStack",
			"type",
			"Type",
			"type",
			"Type",
			"type",
			"Type",
			"type",
			"Type",
			"type",
			"name",
			"source",
			"target",
			"\"target\"",
			"\"source\"",
			"\"name\"",
			"name",
			"target",
			"source"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "d3-visualizations/us-budget-sankey.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13427,
						"regions":
						{
						},
						"selection":
						[
							[
								11890,
								11890
							]
						],
						"settings":
						{
							"SL.13.region_keys":
							[
							],
							"SL.50.region_keys":
							[
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1126.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 39.0
	},
	"input":
	{
		"height": 57.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 126.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "index.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 292.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
